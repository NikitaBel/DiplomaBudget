@model Diploma.Models.BudgetItem

<h4>Изменение статьи</h4>
<a href="@Url.Action("LoadMDX", "BudgetItem")" hidden="hidden" id="LoadMDX"></a>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BudgetNameID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BudgetNameID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BudgetNameID, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ParentID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SortOrder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SortOrder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnaryOperator, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnaryOperator, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnaryOperator, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MDX_Formula, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.MDX_Formula, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MDX_Formula, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-7">
                <a class="btn btn-default" id="MDX_Create">Создать формулу</a>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ForPlan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ForPlan", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ForPlan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ItemType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ItemType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Active)
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-info" />
                @Html.ActionLink("Назад", "Index", "BudgetItem", htmlAttributes: new { @class = "btn btn-info" })
            </div>
        </div>
    </div>
}

<div id="Modal" title="Создание формулы MDX" >
    <label class="control-label">Формула</label>
    <input class="form-control" id="Formula" />

    <label class="control-label">Статьи</label>
    <select id="Items" class="form-control"></select>
    <button id="Add_Item">Добавить поле</button>
</div>


@section scripts{
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#Modal').dialog({
                draggable: true,
                resizable: true,
                modal: true,
                autoOpen: false,
                buttons: {
                    "Да": function (e) {
                        e.preventDefault();
                        $('#MDX_Formula').val($('#Formula').val());
                        $(this).dialog('close');
                    },
                    "Нет": function () {
                        $(this).dialog('close');
                    }
                }
            });
            $("#MDX_Create").click(function () {
                $('#Modal').dialog('open');
                $.ajax({
                    type: 'Post',
                    url: $('#LoadMDX').attr("href"),
                    contentType: 'application/json',
                    success: function (Data) {
                        var $ele = $('#Items');
                        $ele.empty();
                        $.each(Data, function (i, val) {
                            $ele.append($('<option/>').val(val.ItemNum).text(val.ItemName));
                        })
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });
                $("#Add_Item").click(function () {
                    var elem = $('#Items').val();
                    var formula = $('#Formula').val();
                    var NewFormula = formula+elem ;
                    $('#Formula').val(NewFormula);
                });


            });

        })
    </script>
}


